attribute vec4 aVertexCo;
varying vec2 vTextureCo;

uniform vec2 location5;
uniform vec2 location10;
uniform vec2 location13;
uniform vec2 location16;
uniform vec2 location19;
uniform vec2 location22;
uniform vec2 location27;
uniform vec2 location43;
uniform vec2 location46;
uniform vec2 location49;
uniform vec2 location52;
uniform vec2 location55;
uniform vec2 location72;
uniform vec2 location73;
uniform vec2 location74;
uniform vec2 location77;
uniform vec2 location78;
uniform vec2 location79;
uniform vec2 location80;
uniform vec2 location81;
uniform vec2 location82;
uniform vec2 location83;
uniform vec2 location84;
uniform vec2 location90;
uniform float faceIntensity;
uniform float foreHeadIntensity;
uniform float noseIntensity;
uniform float longNoseIntensity;
uniform float shortNoseIntensity;
uniform float mouthIntensity;
uniform float largeEyeIntensity;
uniform float shrinkEyeIntensity;
uniform float chinIntensity;
uniform float cutChinIntensity;
uniform float surfaceWidth;
uniform float surfaceHeight;
#define wh vec2(surfaceWidth, surfaceHeight)

vec2 stretchFun(vec2 srcPoint, vec2 referPoint, vec2 fixedPoint, float radius){
    vec2 dstPoint = vec2(0.0);
    vec2 direction = fixedPoint - referPoint;
    float scale = clamp(1.0 - distance(srcPoint, referPoint) / radius, 0.0, 1.0);
    dstPoint = srcPoint + direction * scale;
    return dstPoint;
}

void main(){
    gl_Position = 2.0 * aVertexCo - 1.0;
    vec2 curCoordinate = aVertexCo.xy * wh;

    vec2 srcPoint = vec2(0.0, 0.0);
    vec2 dstPoint = vec2(0.0, 0.0);
    vec2 curPoint = vec2(0.0, 0.0);
    vec2 tempPoint = vec2(0.0, 0.0);
    float eyeDis = distance(location74, location77);
    float radius = 0.0;
    float intensity = 0.0;

      //胖瘦脸
    curPoint = curCoordinate;
    radius = eyeDis;
    srcPoint = location5;
    dstPoint = location46 + (srcPoint - location46) * 0.96;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location27;
    dstPoint = location46 + (srcPoint - location46) * 0.96;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    radius = eyeDis * 1.5;
    tempPoint = location46 + (location16 - location46) * 0.7;
    srcPoint = location10;
    dstPoint = tempPoint + (srcPoint - tempPoint) * 0.95;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location22;
    dstPoint = tempPoint + (srcPoint - tempPoint) * 0.95;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location13;
    dstPoint = tempPoint + (srcPoint - tempPoint) * 0.9;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location19;
    dstPoint = tempPoint + (srcPoint - tempPoint) * 0.9;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    curCoordinate = curPoint + (curCoordinate - curPoint) * (faceIntensity - 0.5) * 16.0;

      //额头拉伸收缩
    intensity = (-foreHeadIntensity + 0.5) * 8.0;
    vec2 foreHeadMid = location43 + (location43 - location49) * 1.8;
    vec2 foreHeadLeft = foreHeadMid + (location74 - location77) * 0.8;
    vec2 foreHeadRight = foreHeadMid + (location77 - location74) * 0.8;
    radius = eyeDis;
    srcPoint = foreHeadMid;
    dstPoint = srcPoint + (location43 - location49) * 0.2 *  intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = foreHeadLeft;
    dstPoint = srcPoint + (location43 - location49) * 0.2 * intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = foreHeadRight;
    dstPoint = srcPoint + (location43 - location49) * 0.2 * intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);

      //横着放大缩小鼻子
    intensity = (noseIntensity - 0.5) * 0.35;
    srcPoint = location80 + (location78 - location80) * 0.5;
    dstPoint = srcPoint + (location81 - srcPoint) * intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location81 + (location79 - location81) * 0.5;
    dstPoint = srcPoint + (location80 - srcPoint) * intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    intensity = (noseIntensity - 0.5) * 1.2;
    radius = distance(location82, location83) * (0.5 + intensity * 0.2);
    curPoint = curCoordinate;
    srcPoint = location82 + (location82 - location83) * intensity * 0.2;
    dstPoint = location82 + (location83 - location82) * 0.5;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location83 + (location83 - location82) * intensity * 0.2;
    dstPoint = location83 + (location82 - location83) * 0.5;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    curCoordinate = curPoint + (curCoordinate - curPoint) * intensity;

      //鼻子拉长
    radius = eyeDis * 0.5;
    dstPoint = location49 + (location46 - location49) * 0.4 * longNoseIntensity;
    curCoordinate = stretchFun(curCoordinate, location49, dstPoint, radius);

      //鼻子缩短
    radius = eyeDis * 0.7;
    dstPoint = location49 + (location49 - location46) * shortNoseIntensity;
    curCoordinate = stretchFun(curCoordinate, location49, dstPoint, radius);

      //左右放大缩小嘴巴
    intensity = (mouthIntensity - 0.5);
    radius = distance(location84, location90) * (0.5 + intensity * 0.2);
    curPoint = curCoordinate;
    srcPoint = location84 + (location84 - location90) * intensity * 0.2;
    dstPoint = location84 + (location90 - location84) * 0.5;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location90 + (location90 - location84) * intensity * 0.2;
    dstPoint = location90 + (location84 - location90) * 0.5;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    curCoordinate = curPoint + (curCoordinate - curPoint) * (intensity + step(intensity, 0.0) * intensity);

      //放大眼睛
    float dis1 = distance(curCoordinate, location74);
    float dis2 = distance(curCoordinate, location77);
    float dis3 = distance(location52, location55);
    if(dis1 <= dis3) {
        float weight = dis1 / dis3;
        weight = 0.375 * (1.0 - weight * weight);
        curCoordinate = curCoordinate - (curCoordinate - location74) * weight  * largeEyeIntensity;
    }
    if(dis2 <= dis3) {
        float weight = dis2 / dis3;
        weight = 0.375 * (1.0 - weight * weight);
        curCoordinate = curCoordinate - (curCoordinate - location77) * weight * largeEyeIntensity;
    }

      //缩小眼睛
    dis1 = distance(curCoordinate, location74);
    dis2 = distance(curCoordinate, location77);
    dis3 = distance(location52, location55);
    if(dis1 <= dis3) {
        float weight = dis1 / dis3;
        weight = 0.75 * (1.0 - weight * weight) * (1.0 - sin(weight * 1.57));
        curCoordinate = curCoordinate + (curCoordinate - location74) * weight  * shrinkEyeIntensity;
    }
    if(dis2 <= dis3) {
        float weight = dis2 / dis3;
        weight = 0.75 * (1.0 - weight * weight) * (1.0 - sin(weight * 1.57));
        curCoordinate = curCoordinate + (curCoordinate - location77) * weight * shrinkEyeIntensity;
    }

      //下巴拉伸收缩
    intensity = (- chinIntensity + 0.5) * 0.6;
    radius = eyeDis;
    srcPoint = location16;
    dstPoint = srcPoint + (location16 - location49) * intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location13;
    dstPoint = srcPoint + (location13 - location49) * intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location19;
    dstPoint = srcPoint + (location19 - location49) * intensity;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);

      //下巴变尖
    curPoint = curCoordinate;
    radius = eyeDis * 0.5;
    tempPoint = location46 + (location16 - location46) * 0.7;
    srcPoint = location13;
    dstPoint = tempPoint + (srcPoint - tempPoint) * 0.9;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    srcPoint = location19;
    dstPoint = tempPoint + (srcPoint - tempPoint) * 0.9;
    curCoordinate = stretchFun(curCoordinate, srcPoint, dstPoint, radius);
    curCoordinate = curPoint + (- curCoordinate + curPoint) * cutChinIntensity;

    vTextureCo =  curCoordinate / wh;
}