#ifdef GL_ES
precision highp float;
precision highp int;
#endif

uniform sampler2D uTexture;
uniform sampler2D uTextureU;
uniform sampler2D uTextureV;
uniform float uDivW;
uniform float uDivH;
uniform float uWidthAdjust;
const mat3 yuvToRgb = mat3(1.1643,  1.16430, 1.1643,
                                      0.0,    -0.39173, 2.0170,
                                      1.5958, -0.81290, 0.0);

varying vec2 vTextureCo;

void main(){
//    vec4 color = vec4((texture2D(uTexture, vTextureCo).r - 16./255.) * 1.164);
//    vec4 U = vec4(texture2D(uTextureU, vTextureCo).r - 128./255.);
//    vec4 V = vec4(texture2D(uTextureV, vTextureCo).r - 128./255.);
//    color += V * vec4(1.596, -0.813, 0, 0);
//    color += U * vec4(0, -0.392, 2.017, 0);
//    color.a = 1.0;
//    gl_FragColor = color;

vec2 texCo = vec2(vTextureCo.x * uWidthAdjust, vTextureCo.y);
vec3 yuv;
vec2 rgbCo = vec2(texCo.x/2.0,texCo.y);
yuv.r = texture2D(uTexture, rgbCo).r - 0.0625;
yuv.g = texture2D(uTextureU, vec2(rgbCo.x / uDivW, rgbCo.y / uDivH)).r - 0.5;
yuv.b = texture2D(uTextureV, vec2(rgbCo.x / uDivW, rgbCo.y / uDivH)).r - 0.5;
vec3 yuv2;
vec2 aCo = rgbCo + vec2(uWidthAdjust/2.,0.0);
yuv2.r = texture2D(uTexture, aCo).r - 0.0625;
yuv2.g = texture2D(uTextureU, vec2(aCo.x / uDivW, aCo.y / uDivH)).r - 0.5;
yuv2.b = texture2D(uTextureV, vec2(aCo.x / uDivW, aCo.y / uDivH)).r - 0.5;
vec4 fcolor;
fcolor.rgb = yuvToRgb * yuv;
fcolor.a = (yuvToRgb * yuv2).r;
gl_FragColor = clamp(fcolor, 0.0, 1.0);
}