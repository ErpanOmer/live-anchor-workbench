precision highp float;
attribute vec4 aVertexCo;
attribute vec2 aTextureCo;

uniform mat4 World;
uniform mat4 ViewProj;
uniform vec4 ShadowPlanar;
uniform vec3 SunDir;
varying vec3 UV;

void main()
{
	vec4 vPos = World * aVertexCo;
	float fPlanePos = (dot(ShadowPlanar.xyz, vPos.xyz) - ShadowPlanar.w);
	vPos.xyz = (vPos.xyz - (fPlanePos / dot(ShadowPlanar.xyz, SunDir.xyz)) * SunDir.xyz);
	vPos = ViewProj * vPos;
	UV.xy = aTextureCo.xy;
	UV.z = step(0.0, fPlanePos);
	gl_Position = vPos;
}